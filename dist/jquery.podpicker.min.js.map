{"version":3,"sources":["jquery.podpicker.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","isUndefined","value","isElement","jquery","length","nodeType","isString","isBoolean","isArray","constructor","Array","isHexColor","test","isTimeString","ERROR_MSG","items_param","items_type","items_empty","options_audioElem_type","options_timelineColor_type","options_isShowStartTime_type","options_timelineColor_type_value","audioFile_format","start_format","convertTime","timeString","error","timeArray","split","len","fn","createPodPicker","items","options","_createTimeline","fragment","timelineColor","each","i","item","start","title","isShowStartTime","that","data","push","append","_bindEvents","click","audioElem","play","currentTime","this","parent","index","window","setTimeout","addClass","bind","_startTimeSet","Math","abs","_setPointerPosition","pause","clearTimeout","removeClass","eq","children","item_h","height","css","_PodPicker","isCreated","selector","_preTime","_itemsIndex","_seekingIndex","sort","pre","next","extend","get","currentSrcInterval","setInterval","currentSrc","clearInterval","match","removePodPicker","msg","remove"],"mappings":"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","file":"jquery.podpicker.min.js","sourcesContent":["/*!\n * Pod Picker (jQuery Plugin) - A Podcast Timeline Generator\n * https://github.com/RoberMac/jQuery-PodPicker\n *\n * Copyright (c) 2015 RoberTu <robertu0717@gmail.com>\n * @license MIT\n * @version v0.1.2\n */\n\n// Uses CommonJS, AMD or browser globals to create a jQuery plugin.\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node/CommonJS\n        module.exports = factory(require('jquery'));\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n})(function ($) {\n\n    \"use strict\";\n\n    /**\n     * Determines if a value is `undefined / string / boolean / array / object / hex color / timeString`\n     *\n     * @param {Any} value - The value need to be determined\n     * @return {Boolean}\n     */\n    var isUndefined = function isUndefined(value) {\n        return typeof value === 'undefined';\n    },\n        isElement = function isElement(value) {\n        return value && (value.jquery && value.length > 0 || value.nodeType);\n    },\n        isString = function isString(value) {\n        return typeof value === 'string';\n    },\n        isBoolean = function isBoolean(value) {\n        return typeof value === 'boolean';\n    },\n        isArray = function isArray(value) {\n        return value.constructor === Array;\n    },\n        isHexColor = function isHexColor(value) {\n        return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(value);\n    },\n        isTimeString = function isTimeString(value) {\n        return /^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$/.test(value);\n    };\n\n    /**\n     * Error Messages\n     *\n     */\n    var ERROR_MSG = {\n        // `items` parameter\n        items_param: 'Pod Picker: `items` parameter is required',\n        items_type: 'Pod Picker: `items` parameter must be an array',\n        items_empty: 'Pod Picker: `items` parameter cannot be an empty array',\n        // `options` parameter\n        options_audioElem_type: 'Pod Picker: `options.audioElem` must be a DOM Element or jQuery Object',\n        options_timelineColor_type: 'Pod Picker: `options.timelineColor` must be a string',\n        options_isShowStartTime_type: 'Pod Picker: `options.isShowStartTime` must be a boolean',\n        options_timelineColor_type_value: 'Pod Picker: `options.timelineColor` must be a hex color',\n        // others\n        audioFile_format: 'Pod Picker: does not support MP3 file format',\n        start_format: 'Pod Picker: `start` time string must be \"hh:mm:ss\", \"mm:ss\" or \"ss\" format'\n    };\n\n    /**\n     * Convert time string to seconds\n     *\n     * @param {String} [timeString] - A time string \n     * @return {Number} seconds\n     */\n    var convertTime = function convertTime(timeString) {\n        // Check time string\n        !isTimeString(timeString) && $.error(ERROR_MSG.start_format);\n\n        var timeArray = timeString.split(':'),\n            len = timeArray.length;\n\n        switch (len) {\n            case 1:\n                return timeArray[0] * 1;\n            case 2:\n                return timeArray[0] * 60 + timeArray[1] * 1;\n            case 3:\n                return timeArray[0] * 60 * 60 + timeArray[1] * 60 + timeArray[2] * 1;\n            default:\n                $.error(ERROR_MSG.start_format);\n        }\n    };\n\n    /**\n     * Create Pod Picker\n     *\n     * @param {Array}  [items]   - Data Items\n     * @param {Object} [options] - Options\n     *   - `audioElem`      : {(DOM Element | jQuery Object)} - The Target Audio\n     *   - `timelineColor`  : {String}  - The Timeline Section color\n     *   - `isShowStartTime`: {Boolean} - To determine if need to show the Section Start Time\n     */\n    $.fn.createPodPicker = function (items, options) {\n\n        // Check if Pod Picker has been created\n        if ($.fn._PodPicker.isCreated) {\n            $.error('Pod Picker already exists');\n        } else {\n            $.fn._PodPicker.isCreated = true;\n            $.fn._PodPicker.selector = this.selector;\n        }\n\n        /** \n         * Set Internal Variables\n         *\n         */\n        this.data({\n            _preTime: 0,\n            _itemsIndex: 0,\n            _seekingIndex: 0,\n            _startTimeSet: []\n        });\n\n        /**\n          * Set Items\n          *\n          */\n        // Check items parameter\n        isUndefined(items) ? $.error(ERROR_MSG.items_param) : isArray(items) ? items.length <= 0 && $.error(ERROR_MSG.items_empty) : $.error(ERROR_MSG.items_type);\n        // Sort items array by item object\n        items = items.sort(function (pre, next) {\n            pre = convertTime(pre.start);\n            next = convertTime(next.start);\n\n            if (pre > next) {\n                return 1;\n            } else if (pre < next) {\n                return -1;\n            } else {\n                return 0;\n            }\n        });\n\n        /** \n         * Set Options\n         *\n         */\n        options = $.extend({}, {\n            audioElem: $('audio').get()[0],\n            timelineColor: '#CECECF',\n            isShowStartTime: false\n        }, options);\n        // Check option: 'audioElem'\n        isElement(options.audioElem) ? options.audioElem = $(options.audioElem).get()[0] : $.error(ERROR_MSG.options_audioElem_type);\n        // Check option: 'timelineColor'\n        isString(options.timelineColor) ? isHexColor(options.timelineColor) ? null : $.error(ERROR_MSG.options_timelineColor_type_value) : $.error(ERROR_MSG.options_timelineColor_type);\n        // Check option: 'isShowStartTime'\n        !isBoolean(options.isShowStartTime) && $.error(ERROR_MSG.options_isShowStartTime_type);\n\n        /** \n         * Create Timeline\n         *\n         */\n        var that = this;\n        var currentSrcInterval = setInterval(function () {\n            var currentSrc = options.audioElem.currentSrc;\n            if (currentSrc) {\n                clearInterval(currentSrcInterval);\n                currentSrc.match(/\\.mp3/i) ? $.error(ERROR_MSG.audioFile_format)\n                // then create timeline\n                : _createTimeline();\n            }\n        }, 10);\n        // Create timeline\n        function _createTimeline() {\n            var fragment = '<div id=\"pp-timeline\"><ul style=\"color:' + options.timelineColor + '\">';\n            $.each(items, function (i, item) {\n                var start = convertTime(item.start),\n                    title = options.isShowStartTime ? item.start + ' - ' + item.title : item.title;\n                fragment += '<li class=\"pp-item\"><span>' + title + '</span></li>';\n                // Extract all `item` start time and then push it to `that.data('_startTimeSet`')\n                that.data('_startTimeSet').push(start);\n            });\n            fragment += '</ul><span id=\"pp-pointer\"></span></div>';\n            that.append(fragment);\n\n            // then bind events\n            _bindEvents();\n        }\n        // Bind Events\n        function _bindEvents() {\n            $('.pp-item span').click(function () {\n                options.audioElem.play();\n                options.audioElem.currentTime = that.data('_startTimeSet')[$(this).parent().index()];\n                that.data('_seekingIndex', window.setTimeout(function () {\n                    $('#pp-pointer').addClass('seeking');\n                }, 500));\n            });\n            $(options.audioElem).bind('timeupdate', function () {\n                var currentTime = options.audioElem.currentTime,\n                    _startTimeSet = that.data('_startTimeSet'),\n                    len = _startTimeSet.length;\n\n                if (Math.abs(that.data('_preTime') - currentTime) > 1) {\n                    // user-triggered\n                    $.each(_startTimeSet, function (i) {\n                        _startTimeSet[i + 1] ? currentTime >= _startTimeSet[i] && currentTime <= _startTimeSet[i + 1] ? _setPointerPosition(i + 1) : null : currentTime >= _startTimeSet[i] ? _setPointerPosition(i + 1) : null;\n                    });\n                } else {\n                    // auto-triggered\n                    $.each(_startTimeSet, function (i) {\n                        currentTime > _startTimeSet[i] - 1 && currentTime <= _startTimeSet[i] + 1 && that.data('_itemsIndex') !== i + 1 ? _setPointerPosition(i + 1) : null;\n                    });\n                }\n\n                that.data('_preTime', currentTime);\n            }).bind('seeking', function () {\n                options.audioElem.pause();\n            }).bind('seeked', function () {\n                window.clearTimeout(that.data('_seekingIndex'));\n                options.audioElem.play();\n                $('#pp-pointer').removeClass('seeking');\n            });\n        }\n        // Set or Reset timeline pointer position\n        function _setPointerPosition(index) {\n\n            // Store current item(Section) index\n            var item = $('.pp-item');\n            that.data('_itemsIndex', index);\n\n            // Set timeline section style\n            item.eq(index - 1).children().addClass('currentSection');\n            $.each(item, function (i) {\n                i !== index - 1 ? item.eq(i).children().removeClass('currentSection') : null;\n            });\n\n            // Set timeline pointer position\n            var item_h = item.height();\n            $('#pp-pointer').css('top', index * item_h - item_h / 2 - 6 + 'px');\n        }\n\n        return this;\n    };\n\n    /**\n     * Remove Pod Picker\n     * \n     * throw error if Pod Picker has not been created or the selected element is not correct\n     */\n    $.fn.removePodPicker = function () {\n\n        if ($.fn._PodPicker.selector && $.fn._PodPicker.selector !== this.selector) {\n            var msg = 'Pod Picker: Did you mean `$(\"' + $.fn._PodPicker.selector + '\").removePodPicker()` ?';\n            $.error(msg);\n        } else if (!$.fn._PodPicker.selector) {\n            $.error('Pod Picker: has not been created');\n        }\n\n        // Remove timeline\n        $('#pp-timeline').remove();\n\n        // Reset status\n        $.fn._PodPicker.isCreated = false;\n\n        return this;\n    };\n\n    /**\n     * Store Internal Data\n     *\n     */\n    $.fn._PodPicker = {\n        isCreated: false,\n        selector: ''\n    };\n});\n// https://github.com/umdjs/umd/blob/master/jqueryPluginCommonjs.js"],"sourceRoot":"/source/"}